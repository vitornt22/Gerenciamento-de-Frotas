



# TUTORIALLL https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-18-04-pt
#############CONFIGURANDO GUNICORN#################

#Adicionando arquivo socket

sudo nano /etc/systemd/system/optar.socket

#Colar esse codigo no Nano (ctrt+O salva, ctrl+X sair)
# Ver a diferen√ßa entre SOCK e SOCKET

[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/optar.sock

[Install]
WantedBy=sockets.target


#Adicionando arquivo service

sudo nano /etc/systemd/system/optar.service

#Colar esse codigo no Nano (ctrt+O salva, ctrl+X sair)

[Unit]
Description=Gunicorn daemon (You can change if you want)
Requires=optar.socket
After=network.target

[Service]
User=root
Group=www-data
Restart=on-failure
EnvironmentFile=/root/app_repo/.env
WorkingDirectory=/root/app_repo
# --error-logfile --enable-stdio-inheritance --log-level and --capture-output
# are all for debugging purposes.
ExecStart=/root/app_repo/venv/bin/gunicorn \
          --error-logfile /root/app_repo/gunicorn-error-log \
          --enable-stdio-inheritance \
          --log-level "debug" \
          --capture-output \
          --access-logfile - \
          --workers 6 \
          --bind unix:/run/optar.sock \
          Optar.wsgi:application

[Install]
WantedBy=multi-user.target

# Ativando
sudo systemctl start optar.socket
sudo systemctl enable optar.socket

# Checando
sudo systemctl status optar.socket
curl --unix-socket /run/optar.socket localhost
sudo systemctl status optar

# Restarting
sudo systemctl restart optar.socket
sudo systemctl restart optar

# After changing something
sudo systemctl daemon-reload

# Debugging
sudo journalctl -u optar.service
sudo journalctl -u optar.socket